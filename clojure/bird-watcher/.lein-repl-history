(last [2 5 0 7 4 2])
(rest [2 5 0 7 4 2])
(pop [2 5 0 7 4 2])
(pop [2 5 0 7 4 1])
(inc 1)
(inc (last [2 5 0 7 4 1])))
(inc (last [2 5 0 7 4 1]))
(conj [2 5 0 7 4 2] 3)
(def birds [2 5 0 7 4 1])
(-> 
birds
last
)
(-> 
birds
(last)
(inc)
)
(-> 
birds
(last)
(->> (inc (last birds))
(conj (pop birds)) 
)
birds
(includes? [1 2 3] 3)
(contains? [1 2 3] 3)
(contains? [1 2 3] 2)
(contains? [1 2 3] 1)
(contains? [1 2 3] 3)
(contains? [1 2 3 4] 3)
(contains? [1 2 3 4] 4)
(some [1 2 3 4] 4)
(some? [1 2 3 4] 4)
(some [1 2 3 4] 3)
(some (seq [1 2 3 4]) 3)
(some #(= 3 %) [1 2 3])
(some #(= 2 %) [1 2 3])
(some #(= 4 %) [1 2 3])
(true? (some #(= 4 %) [1 2 3]))
(true? (some #(= 2 %) [1 2 3]))
(true? (some #(= 1 %) [1 2 3]))
(true? (some #(= 2 %) [1 2 3]))
(true? (some #(= 3 %) [1 2 3]))
(true? (some #(= 4 %) [1 2 3]))
(first [2 5 0 7 4 1])
(first [2 5 0 7 4 1] 4)
(first [2 5 0 7 4 1])
(splice [2 5 0 7 4 1])
(firs 2 [2 5 0 7 4 1])
(get [2 5 0 7 4 1] 2)
(get [2 5 0 7 4 1])
(take [2 5 0 7 4 1])
(take 3 [2 5 0 7 4 1])
(take 4 [2 5 0 7 4 1])
(reduce + (take 4 [2 5 0 7 4 1]))
(some #((> 4 %)) [2 5 0 7 4 1])
(some #(> 4 %) [2 5 0 7 4 1])
(filter #(> 4 %) [2 5 0 7 4 1])
(filter #(> % 4) [2 5 0 7 4 1])
(def odd-week [1 0 1 0 1 0 1])
(def week [1 0 1 0 1 0 1])
week
(rest week)
(first week)
(rest [])
(rest [1])
(empty? (rest [1]))
(empty? (rest [1 2]))
